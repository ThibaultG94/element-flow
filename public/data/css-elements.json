{
  "--*": {
    "name": "Propriétés personnalisées (--*)",
    "category": "variables",
    "description": "Les propriétés personnalisées CSS (variables CSS) permettent de stocker des valeurs réutilisables dans un document et d'y accéder via la fonction var().",
    "syntax": "--nom-variable: valeur;",
    "attributes": [
      {
        "name": "portée",
        "description": "Les propriétés personnalisées sont limitées à la portée de l'élément sur lequel elles sont déclarées, et sont héritées par les éléments enfants."
      },
      {
        "name": "cascade",
        "description": "La valeur utilisée d'une propriété personnalisée est déterminée par l'algorithme de la cascade, comme pour toute autre propriété CSS."
      },
      {
        "name": "nomenclature",
        "description": "Les noms des propriétés personnalisées doivent commencer par deux tirets (--) et sont sensibles à la casse."
      }
    ],
    "examples": [
      {
        "title": "Définition et utilisation basique",
        "code": ":root {\n  --couleur-primaire: #488cff;\n  --couleur-secondaire: #ffff8c;\n  --espacement: 1rem;\n}\n\n.element {\n  color: var(--couleur-primaire);\n  background-color: var(--couleur-secondaire);\n  padding: var(--espacement);\n}"
      },
      {
        "title": "Valeurs complexes et valeurs par défaut",
        "code": ":root {\n  --bordure: 1px solid black;\n  --ombre: 2px 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.bouton {\n  /* Valeur par défaut comme second argument */\n  border: var(--bordure, 2px dotted gray);\n  /* Ombres multiples avec variables CSS */\n  box-shadow: var(--ombre), 0 0 5px var(--couleur-primaire, blue);\n}"
      }
    ],
    "animation": {
      "steps": [
        {
          "title": "Qu'est-ce que les propriétés personnalisées CSS ?",
          "text": "Les propriétés personnalisées CSS (variables CSS) permettent de définir des valeurs réutilisables dans une feuille de style. Elles sont préfixées par deux tirets (--) pour les distinguer des propriétés CSS standard.",
          "code": "/* Définition d'une propriété personnalisée */\n:root {\n  --couleur-primaire: #3498db;\n}\n\n/* Utilisation de la propriété */\n.element {\n  color: var(--couleur-primaire);\n}",
          "visualDemo": {
            "content": "<div style='background-color: #f8f9fa; padding: 15px; border-radius: 8px; font-family: monospace;'><div style='margin-bottom: 10px; display: flex; align-items: center;'><span style='background: #3498db; width: 20px; height: 20px; display: inline-block; margin-right: 10px; border-radius: 3px;'></span> <code>--couleur-primaire: #3498db;</code></div><div>Avec les variables CSS, définissez une fois, utilisez partout !</div></div>"
          }
        },
        {
          "title": "Portée et héritage",
          "text": "Les propriétés personnalisées suivent les règles de portée CSS. En les définissant sur l'élément :root, elles sont disponibles globalement, mais vous pouvez aussi les définir sur n'importe quel élément pour limiter leur portée.",
          "code": "/* Variables globales */\n:root {\n  --couleur-texte: black;\n}\n\n/* Portée limitée */\n.theme-sombre {\n  --couleur-texte: white;\n  --couleur-fond: #333;\n}\n\n.element {\n  color: var(--couleur-texte);\n  background-color: var(--couleur-fond, transparent);\n}",
          "visualDemo": {
            "content": "<div style='display: flex; gap: 15px;'><div style='flex: 1; padding: 15px; background-color: white; color: black; border-radius: 8px; border: 1px solid #ddd;'><strong>Page normale</strong><div><code>--couleur-texte: black;</code></div></div><div style='flex: 1; padding: 15px; background-color: #333; color: white; border-radius: 8px; border: 1px solid #555;'><strong>Theme sombre</strong><div><code>--couleur-texte: white;</code><br><code>--couleur-fond: #333;</code></div></div></div>"
          }
        },
        {
          "title": "Fonction var() et valeurs par défaut",
          "text": "La fonction var() permet d'insérer la valeur d'une propriété personnalisée. Elle accepte un second argument qui sera utilisé comme valeur par défaut si la propriété n'est pas définie ou n'est pas valide.",
          "code": ":root {\n  --padding-bouton: 8px 16px;\n}\n\n.bouton {\n  /* Valeur par défaut si --couleur-bouton n'existe pas */\n  background-color: var(--couleur-bouton, #2ecc71);\n  padding: var(--padding-bouton);\n  border-radius: var(--radius-bouton, 4px);\n}",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f5f5f5; border-radius: 8px;'><button style='background-color: #2ecc71; padding: 8px 16px; border-radius: 4px; border: none; color: white; font-weight: bold;'>Bouton</button><div style='margin-top: 15px; font-family: monospace; font-size: 14px;'><div>background-color: var(--couleur-bouton, #2ecc71);</div><div>padding: var(--padding-bouton);</div><div>border-radius: var(--radius-bouton, 4px);</div></div></div>"
          }
        },
        {
          "title": "Valeurs complexes et calculs",
          "text": "Les propriétés personnalisées peuvent stocker des valeurs complexes et être utilisées dans des calculs avec la fonction calc().",
          "code": ":root {\n  --espacement-base: 8px;\n  --couleur-base: rgb(65, 105, 225);\n  --ombre-standard: 0 2px 5px rgba(0, 0, 0, 0.2);\n}\n\n.carte {\n  padding: calc(var(--espacement-base) * 2);\n  box-shadow: var(--ombre-standard);\n  border: 1px solid var(--couleur-base);\n}",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: white; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1);'><div style='padding: 16px; border: 1px solid rgb(65, 105, 225); box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); border-radius: 4px; background-color: white;'><div style='font-weight: bold; margin-bottom: 8px;'>Exemple de carte</div><div style='color: #555;'>Les variables CSS permettent de standardiser les valeurs comme les espacements, couleurs et ombres.</div></div><div style='margin-top: 15px; font-family: monospace; font-size: 13px;'><div>--espacement-base: 8px;</div><div>padding: calc(var(--espacement-base) * 2); <span style='color: #666;'>/* = 16px */</span></div></div></div>"
          }
        },
        {
          "title": "Media queries et adaptation au thème",
          "text": "Les propriétés personnalisées peuvent être redéfinies dans les media queries pour créer des designs adaptatifs, ou pour implémenter des thèmes clairs/sombres facilement.",
          "code": ":root {\n  --couleur-texte: #333;\n  --couleur-fond: #fff;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --couleur-texte: #eee;\n    --couleur-fond: #222;\n  }\n}\n\nbody {\n  color: var(--couleur-texte);\n  background-color: var(--couleur-fond);\n}",
          "visualDemo": {
            "content": "<div style='display: flex; gap: 20px;'><div style='flex: 1; padding: 15px; background-color: #fff; color: #333; border-radius: 8px; border: 1px solid #ddd;'><strong>Thème clair</strong><div style='margin-top: 10px; font-family: monospace;'>--couleur-texte: #333;<br>--couleur-fond: #fff;</div></div><div style='flex: 1; padding: 15px; background-color: #222; color: #eee; border-radius: 8px; border: 1px solid #444;'><strong>Thème sombre</strong><div style='margin-top: 10px; font-family: monospace;'>--couleur-texte: #eee;<br>--couleur-fond: #222;</div></div></div>"
          }
        }
      ]
    },
    "related": ["var", "calc", "color", "background-color", "root"]
  }
}