{
  "--*": {
    "name": "Propriétés personnalisées (--*)",
    "category": "variables",
    "description": "Les propriétés personnalisées CSS (variables CSS) permettent de stocker des valeurs réutilisables dans un document et d'y accéder via la fonction var().",
    "syntax": "--nom-variable: valeur;",
    "attributes": [
      {
        "name": "portée",
        "description": "Les propriétés personnalisées sont limitées à la portée de l'élément sur lequel elles sont déclarées, et sont héritées par les éléments enfants."
      },
      {
        "name": "cascade",
        "description": "La valeur utilisée d'une propriété personnalisée est déterminée par l'algorithme de la cascade, comme pour toute autre propriété CSS."
      },
      {
        "name": "nomenclature",
        "description": "Les noms des propriétés personnalisées doivent commencer par deux tirets (--) et sont sensibles à la casse."
      }
    ],
    "examples": [
      {
        "title": "Définition et utilisation basique",
        "code": ":root {\n  --couleur-primaire: #488cff;\n  --couleur-secondaire: #ffff8c;\n  --espacement: 1rem;\n}\n\n.element {\n  color: var(--couleur-primaire);\n  background-color: var(--couleur-secondaire);\n  padding: var(--espacement);\n}"
      },
      {
        "title": "Valeurs complexes et valeurs par défaut",
        "code": ":root {\n  --bordure: 1px solid black;\n  --ombre: 2px 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.bouton {\n  /* Valeur par défaut comme second argument */\n  border: var(--bordure, 2px dotted gray);\n  /* Ombres multiples avec variables CSS */\n  box-shadow: var(--ombre), 0 0 5px var(--couleur-primaire, blue);\n}"
      }
    ],
    "animation": {
      "steps": [
        {
          "title": "Qu'est-ce que les propriétés personnalisées CSS ?",
          "text": "Les propriétés personnalisées CSS (variables CSS) permettent de définir des valeurs réutilisables dans une feuille de style. Elles sont préfixées par deux tirets (--) pour les distinguer des propriétés CSS standard.",
          "code": "/* Définition d'une propriété personnalisée */\n:root {\n  --couleur-primaire: #3498db;\n}\n\n/* Utilisation de la propriété */\n.element {\n  color: var(--couleur-primaire);\n}",
          "visualDemo": {
            "content": "<div style='background-color: #f8f9fa; padding: 20px; border-radius: 8px; font-family: system-ui, sans-serif; color: #333; border: 1px solid #ddd; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'><div style='margin-bottom: 15px; display: flex; align-items: center;'><span style='background: #3498db; width: 24px; height: 24px; display: inline-block; margin-right: 12px; border-radius: 4px; box-shadow: 0 2px 3px rgba(0,0,0,0.2);'></span><code style='font-family: monospace; background-color: #eee; padding: 3px 6px; border-radius: 4px; font-size: 14px;'>--couleur-primaire: #3498db;</code></div><div style='font-size: 15px; line-height: 1.5;'>Avec les variables CSS, <strong>définissez une fois, utilisez partout !</strong></div></div>"
          }
        },
        {
          "title": "Portée et héritage",
          "text": "Les propriétés personnalisées suivent les règles de portée CSS. En les définissant sur l'élément :root, elles sont disponibles globalement, mais vous pouvez aussi les définir sur n'importe quel élément pour limiter leur portée.",
          "code": "/* Variables globales */\n:root {\n  --couleur-texte: black;\n}\n\n/* Portée limitée */\n.theme-sombre {\n  --couleur-texte: white;\n  --couleur-fond: #333;\n}\n\n.element {\n  color: var(--couleur-texte);\n  background-color: var(--couleur-fond, transparent);\n}",
          "visualDemo": {
            "content": "<div style='display: flex; gap: 20px; font-family: system-ui, sans-serif;'><div style='flex: 1; padding: 20px; background-color: white; color: black; border-radius: 8px; border: 1px solid #ddd; box-shadow: 0 2px 4px rgba(0,0,0,0.05);'><div style='font-weight: 600; margin-bottom: 12px; font-size: 16px;'>Page normale</div><div style='font-family: monospace; background-color: rgba(0,0,0,0.05); padding: 8px; border-radius: 6px; font-size: 14px;'>--couleur-texte: black;</div></div><div style='flex: 1; padding: 20px; background-color: #333; color: white; border-radius: 8px; border: 1px solid #555; box-shadow: 0 2px 4px rgba(0,0,0,0.2);'><div style='font-weight: 600; margin-bottom: 12px; font-size: 16px;'>Thème sombre</div><div style='font-family: monospace; background-color: rgba(255,255,255,0.1); padding: 8px; border-radius: 6px; font-size: 14px;'>--couleur-texte: white;<br>--couleur-fond: #333;</div></div></div>"
          }
        },
        {
          "title": "Fonction var() et valeurs par défaut",
          "text": "La fonction var() permet d'insérer la valeur d'une propriété personnalisée. Elle accepte un second argument qui sera utilisé comme valeur par défaut si la propriété n'est pas définie ou n'est pas valide.",
          "code": ":root {\n  --padding-bouton: 8px 16px;\n}\n\n.bouton {\n  /* Valeur par défaut si --couleur-bouton n'existe pas */\n  background-color: var(--couleur-bouton, #2ecc71);\n  padding: var(--padding-bouton);\n  border-radius: var(--radius-bouton, 4px);\n}",
          "visualDemo": {
            "content": "<div style='padding: 25px; background-color: #f5f5f5; border-radius: 10px; font-family: system-ui, sans-serif; color: #333; border: 1px solid #e0e0e0;'><div style='text-align: center; margin-bottom: 20px;'><button style='background-color: #2ecc71; padding: 8px 16px; border-radius: 4px; border: none; color: white; font-weight: 500; font-size: 15px; cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.2);'>Bouton</button></div><div style='background-color: white; border-radius: 8px; padding: 15px; border: 1px solid #ddd; font-family: monospace; font-size: 14px; line-height: 1.6;'><div><span style='color: #777;'>/* Pas de variable définie, valeur par défaut utilisée */</span></div><div>background-color: var(<span style='color: #e74c3c;'>--couleur-bouton</span>, <span style='color: #3498db;'>#2ecc71</span>);</div><div>padding: var(<span style='color: #2ecc71;'>--padding-bouton</span>);</div><div>border-radius: var(<span style='color: #e74c3c;'>--radius-bouton</span>, <span style='color: #3498db;'>4px</span>);</div></div></div>"
          }
        },
        {
          "title": "Valeurs complexes et calculs",
          "text": "Les propriétés personnalisées peuvent stocker des valeurs complexes et être utilisées dans des calculs avec la fonction calc().",
          "code": ":root {\n  --espacement-base: 8px;\n  --couleur-base: rgb(65, 105, 225);\n  --ombre-standard: 0 2px 5px rgba(0, 0, 0, 0.2);\n}\n\n.carte {\n  padding: calc(var(--espacement-base) * 2);\n  box-shadow: var(--ombre-standard);\n  border: 1px solid var(--couleur-base);\n}",
          "visualDemo": {
            "content": "<div style='padding: 25px; background-color: #f8f9fa; border-radius: 10px; font-family: system-ui, sans-serif; box-shadow: 0 2px 10px rgba(0,0,0,0.05);'><div style='padding: 16px; border: 1px solid rgb(65, 105, 225); box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); border-radius: 8px; background-color: white; margin-bottom: 20px;'><div style='font-weight: 600; margin-bottom: 12px; color: #333; font-size: 16px;'>Exemple de carte</div><div style='color: #555; line-height: 1.5; font-size: 14px;'>Les variables CSS permettent de standardiser les valeurs comme les espacements, couleurs et ombres à travers votre site.</div></div><div style='background-color: #e9ecef; border-radius: 8px; padding: 15px; font-family: monospace; font-size: 14px; color: #333; line-height: 1.6;'><div style='color: #666;'>/* Variables définies */</div><div>--espacement-base: <span style='color: #e74c3c;'>8px</span>;</div><div>--couleur-base: <span style='color: #3498db;'>rgb(65, 105, 225)</span>;</div><div style='color: #666;'>/* Utilisation avec calc() */</div><div>padding: calc(<span style='color: #e74c3c;'>var(--espacement-base)</span> * 2); <span style='color: #888;'>/* = 16px */</span></div></div></div>"
          }
        },
        {
          "title": "Media queries et adaptation au thème",
          "text": "Les propriétés personnalisées peuvent être redéfinies dans les media queries pour créer des designs adaptatifs, ou pour implémenter des thèmes clairs/sombres facilement.",
          "code": ":root {\n  --couleur-texte: #333;\n  --couleur-fond: #fff;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root {\n    --couleur-texte: #eee;\n    --couleur-fond: #222;\n  }\n}\n\nbody {\n  color: var(--couleur-texte);\n  background-color: var(--couleur-fond);\n}",
          "visualDemo": {
            "content": "<div style='display: flex; gap: 25px; font-family: system-ui, sans-serif;'><div style='flex: 1; padding: 20px; background-color: #fff; color: #333; border-radius: 8px; border: 1px solid #ddd; box-shadow: 0 2px 5px rgba(0,0,0,0.05);'><div style='font-weight: 600; margin-bottom: 15px; font-size: 16px; border-bottom: 2px solid #3498db; padding-bottom: 5px;'>Thème clair</div><div style='background-color: rgba(0,0,0,0.03); border-radius: 6px; padding: 12px; font-family: monospace; line-height: 1.6;'>:root {<br>&nbsp;&nbsp;--couleur-texte: <span style='color: #333; background: #f8f9fa; padding: 2px 4px; border-radius: 2px;'>#333</span>;<br>&nbsp;&nbsp;--couleur-fond: <span style='color: #333; background: #f8f9fa; padding: 2px 4px; border-radius: 2px;'>#fff</span>;<br>}</div></div><div style='flex: 1; padding: 20px; background-color: #222; color: #eee; border-radius: 8px; border: 1px solid #444; box-shadow: 0 2px 5px rgba(0,0,0,0.2);'><div style='font-weight: 600; margin-bottom: 15px; font-size: 16px; border-bottom: 2px solid #3498db; padding-bottom: 5px;'>Thème sombre</div><div style='background-color: rgba(255,255,255,0.1); border-radius: 6px; padding: 12px; font-family: monospace; line-height: 1.6;'>@media (prefers-color-scheme: dark) {<br>&nbsp;&nbsp;:root {<br>&nbsp;&nbsp;&nbsp;&nbsp;--couleur-texte: <span style='color: #eee; background: #333; padding: 2px 4px; border-radius: 2px;'>#eee</span>;<br>&nbsp;&nbsp;&nbsp;&nbsp;--couleur-fond: <span style='color: #eee; background: #333; padding: 2px 4px; border-radius: 2px;'>#222</span>;<br>&nbsp;&nbsp;}<br>}</div></div></div>"
          }
        },
        {
          "title": "Combinaison avec JavaScript",
          "text": "Les propriétés personnalisées peuvent être lues et modifiées via JavaScript, ce qui permet d'intégrer des fonctionnalités interactives comme les modes clairs/sombres ou les thèmes personnalisés.",
          "code": "/* Définition dans le CSS */\n:root {\n  --couleur-primaire: #3498db;\n  --couleur-texte: #333;\n  --couleur-fond: #fff;\n}\n\n/* Accès en JavaScript */\nconst root = document.documentElement;\n\n// Lecture d'une variable\nconst couleurPrimaire = getComputedStyle(root).getPropertyValue('--couleur-primaire');\n\n// Modification d'une variable\nroot.style.setProperty('--couleur-primaire', '#e74c3c');",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f8f9fa; border-radius: 10px; font-family: system-ui, sans-serif; border: 1px solid #ddd;'><div style='display: flex; justify-content: space-between; margin-bottom: 20px;'><div style='font-weight: 600; font-size: 16px; color: #333;'>Thème interactif</div><div><button style='background-color: #3498db; color: white; border: none; border-radius: 4px; padding: 6px 12px; margin-right: 8px; font-size: 14px; cursor: pointer;'>Bleu</button><button style='background-color: #e74c3c; color: white; border: none; border-radius: 4px; padding: 6px 12px; margin-right: 8px; font-size: 14px; cursor: pointer;'>Rouge</button><button style='background-color: #2ecc71; color: white; border: none; border-radius: 4px; padding: 6px 12px; font-size: 14px; cursor: pointer;'>Vert</button></div></div><div style='background-color: white; border-radius: 8px; padding: 15px; box-shadow: 0 2px 6px rgba(0,0,0,0.1); margin-bottom: 20px;'><div style='font-family: monospace; margin-bottom: 15px; background-color: #f1f3f5; padding: 10px; border-radius: 6px; font-size: 14px; color: #333;'>/* CSS */<br>:root {<br>&nbsp;&nbsp;--couleur-primaire: <span style='color: #3498db;'>#3498db</span>;<br>}</div><div style='display: flex; justify-content: center;'><div style='width: 200px; height: 50px; background-color: #3498db; border-radius: 6px; display: flex; align-items: center; justify-content: center; color: white; font-weight: 500;'>Élément coloré</div></div></div><div style='font-family: monospace; font-size: 14px; line-height: 1.6; color: #333; background-color: #f1f3f5; padding: 12px; border-radius: 6px;'>/* JavaScript */<br>// Changer la couleur primaire<br>root.style.setProperty('--couleur-primaire', '#e74c3c');</div></div>"
          }
        }
      ]
    },
    "related": ["var", "calc", "color", "background-color", "root"],
    "exercises": [
      {
        "type": "qcm",
        "question": "Quelle est la syntaxe correcte pour déclarer une propriété personnalisée CSS ?",
        "options": [
          "--ma-variable: valeur;",
          "$ma-variable: valeur;",
          "@ma-variable: valeur;",
          ".ma-variable: valeur;"
        ],
        "correctAnswer": 0,
        "explanation": "Les propriétés personnalisées CSS doivent toujours commencer par deux tirets (--). C'est cette syntaxe qui les distingue des propriétés CSS standard. Les autres notations comme $ sont utilisées dans des préprocesseurs comme Sass."
      },
      {
        "type": "vrai_faux",
        "question": "Les propriétés personnalisées CSS peuvent être redéfinies localement pour un élément spécifique et ses descendants.",
        "correctAnswer": true,
        "explanation": "Vrai. Les propriétés personnalisées respectent la cascade CSS et l'héritage. Vous pouvez les définir globalement sur :root, puis les redéfinir localement sur n'importe quel élément. La nouvelle valeur sera disponible pour cet élément et ses descendants."
      },
      {
        "type": "completion",
        "question": "Complétez le code suivant pour utiliser une propriété personnalisée avec une valeur par défaut :",
        "codeTemplate": ".element {\n  color: [?](--couleur-texte, #333);\n}",
        "correctAnswer": "var",
        "explanation": "La fonction var() est utilisée pour insérer la valeur d'une propriété personnalisée CSS. Elle accepte deux arguments : le nom de la propriété et une valeur par défaut optionnelle qui sera utilisée si la propriété n'est pas définie."
      },
      {
        "type": "debugging",
        "question": "Trouvez et corrigez l'erreur dans ce code CSS :",
        "buggyCode": ":root {\n  --primary-color: #3498db;\n}\n\n.button {\n  background-color: --primary-color;\n  color: white;\n  padding: 10px 15px;\n  border-radius: 4px;\n}",
        "correctAnswer": ":root {\n  --primary-color: #3498db;\n}\n\n.button {\n  background-color: var(--primary-color);\n  color: white;\n  padding: 10px 15px;\n  border-radius: 4px;\n}",
        "explanation": "Les propriétés personnalisées CSS ne peuvent pas être utilisées directement comme valeurs. Vous devez toujours utiliser la fonction var() pour accéder à leur valeur. La ligne correcte est : background-color: var(--primary-color);"
      },
      {
        "type": "qcm",
        "question": "Comment accéder à une propriété personnalisée CSS en JavaScript ?",
        "options": [
          "document.querySelector(':root').--couleur-primaire",
          "CSS.getVariable('--couleur-primaire')",
          "getComputedStyle(document.documentElement).getPropertyValue('--couleur-primaire')",
          "document.style.getVariable('--couleur-primaire')"
        ],
        "correctAnswer": 2,
        "explanation": "Pour accéder à une propriété personnalisée en JavaScript, on utilise la méthode getComputedStyle() pour obtenir les styles calculés d'un élément, puis getPropertyValue() pour récupérer la valeur d'une propriété spécifique."
      }
    ]
  },
  ":active": {
    "name": "Pseudo-classe :active",
    "category": "pseudo-classes",
    "description": "La pseudo-classe :active cible un élément lorsqu'il est activé par l'utilisateur. Elle permet de fournir un feedback visuel indiquant que l'activation a bien été détectée par le navigateur. Pour les interactions avec un pointeur, cela correspond généralement au moment entre l'appui sur le pointeur et son relâchement.",
    "syntax": "sélecteur:active { /* styles */ }",
    "attributes": [
      {
        "name": "Détection d'activation",
        "description": "S'applique quand l'utilisateur active l'élément, typiquement pendant le clic pour les dispositifs de pointage."
      },
      {
        "name": "Touche de tabulation",
        "description": "Est également activée lorsque l'utilisateur emploie la touche de tabulation pour naviguer."
      },
      {
        "name": "Compatibilité",
        "description": "Supportée par tous les navigateurs modernes, mais peut nécessiter des ajustements pour les appareils tactiles."
      }
    ],
    "examples": [
      {
        "title": "Liens actifs",
        "code": "a:link {\n  color: blue;\n}\na:visited {\n  color: purple;\n}\na:hover {\n  background: yellow;\n}\na:active {\n  color: red;\n} /* Liens actifs */"
      },
      {
        "title": "Éléments de formulaire actifs",
        "code": "form:active {\n  color: red;\n}\n\nform button {\n  background: white;\n}"
      },
      {
        "title": "Paragraphes actifs",
        "code": "p:active {\n  background: #eee;\n} /* Paragraphes actifs */"
      }
    ],
    "animation": {
      "steps": [
        {
          "title": "Qu'est-ce que la pseudo-classe :active ?",
          "text": "La pseudo-classe :active permet de cibler un élément lorsqu'il est activé par l'utilisateur, généralement pendant la durée d'un clic. Elle offre un retour visuel immédiat pour indiquer que l'interaction a été détectée.",
          "code": "/* Exemple basique */\na:active {\n  color: red;\n  text-decoration: underline;\n}",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f8f9fa; border-radius: 8px; font-family: system-ui, sans-serif; color: #333; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'><div style='text-align: center; margin-bottom: 20px;'><a href='#' style='display: inline-block; padding: 10px 25px; background-color: #e9ecef; color: #495057; text-decoration: none; border-radius: 4px; font-family: sans-serif; margin-bottom: 15px;'>Cliquez-moi (état normal)</a><div style='display: inline-block; padding: 10px 25px; background-color: #dc3545; color: white; text-decoration: none; border-radius: 4px; font-family: sans-serif; box-shadow: inset 0 0 0 2px rgba(0,0,0,0.1);'>Pendant le clic (:active)</div></div><div style='width: 220px; margin: 0 auto; padding: 10px; background-color: rgba(0,0,0,0.05); border-radius: 6px;'><div style='font-family: monospace; font-size: 14px; color: #333;'>a:active {<br>&nbsp;&nbsp;color: white;<br>&nbsp;&nbsp;background: #dc3545;<br>}</div></div></div>"
          }
        },
        {
          "title": "Ordre des pseudo-classes pour les liens",
          "text": "L'ordre des pseudo-classes pour les liens est important : :link, :visited, :hover, :active (\"LoVe HAte\"). Si ces règles ont la même spécificité, cet ordre garantit que les états plus spécifiques comme :active ne sont pas écrasés par des états plus généraux.",
          "code": "/* Ordre correct des pseudo-classes */\na:link { color: blue; }\na:visited { color: purple; }\na:hover { background-color: yellow; }\na:active { color: red; }",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f8f9fa; border-radius: 8px; font-family: system-ui, sans-serif; color: #333; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'><div style='font-weight: 600; font-size: 18px; margin-bottom: 15px; color: #2c3e50;'>Ordre des pseudo-classes (\"LoVe HAte\")</div><div style='display: flex; flex-direction: column; gap: 15px;'><div style='padding: 12px; border-radius: 6px; background-color: white; border-left: 4px solid #007bff;'><div style='font-weight: 500; margin-bottom: 6px; color: #007bff;'>:link</div><div style='font-family: monospace; font-size: 14px;'>a:link { color: blue; }</div></div><div style='padding: 12px; border-radius: 6px; background-color: white; border-left: 4px solid #6f42c1;'><div style='font-weight: 500; margin-bottom: 6px; color: #6f42c1;'>:visited</div><div style='font-family: monospace; font-size: 14px;'>a:visited { color: purple; }</div></div><div style='padding: 12px; border-radius: 6px; background-color: white; border-left: 4px solid #ffc107;'><div style='font-weight: 500; margin-bottom: 6px; color: #856404;'>:hover</div><div style='font-family: monospace; font-size: 14px;'>a:hover { background-color: yellow; }</div></div><div style='padding: 12px; border-radius: 6px; background-color: white; border-left: 4px solid #dc3545;'><div style='font-weight: 500; margin-bottom: 6px; color: #dc3545;'>:active</div><div style='font-family: monospace; font-size: 14px;'>a:active { color: red; }</div></div></div></div>"
          }
        },
        {
          "title": "Utilisation avec les éléments de formulaire",
          "text": "La pseudo-classe :active est particulièrement utile pour les éléments interactifs comme les boutons. Elle permet de donner un retour visuel instantané lors du clic, améliorant ainsi l'expérience utilisateur.",
          "code": "button {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 15px;\n  border: none;\n  border-radius: 4px;\n}\n\nbutton:active {\n  background-color: #3e8e41;\n  transform: translateY(2px);\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\n}",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f8f9fa; border-radius: 8px; font-family: system-ui, sans-serif; color: #333; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'><div style='font-weight: 600; font-size: 18px; margin-bottom: 15px; color: #2c3e50;'>Effet de bouton au clic</div><div style='display: flex; gap: 25px;'><div style='flex: 1; display: flex; flex-direction: column; gap: 20px; align-items: center;'><div style='display: flex; flex-direction: column; align-items: center;'><div style='font-weight: 500; margin-bottom: 10px; color: #555;'>État normal</div><button style='background-color: #4CAF50; color: white; padding: 10px 15px; border: none; border-radius: 4px; font-size: 16px; box-shadow: 0 3px 5px rgba(0,0,0,0.2); width: 150px;'>Bouton</button></div><div style='display: flex; flex-direction: column; align-items: center;'><div style='font-weight: 500; margin-bottom: 10px; color: #555;'>État :active</div><button style='background-color: #3e8e41; color: white; padding: 10px 15px; border: none; border-radius: 4px; font-size: 16px; box-shadow: 0 1px 2px rgba(0,0,0,0.2); transform: translateY(2px); width: 150px;'>Bouton</button></div></div><div style='flex: 1; background-color: white; padding: 15px; border-radius: 6px; font-family: monospace; font-size: 14px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); line-height: 1.5;'>button:active {<br>&nbsp;&nbsp;background-color: #3e8e41;<br>&nbsp;&nbsp;transform: translateY(2px);<br>&nbsp;&nbsp;box-shadow: 0 1px 2px rgba(0,0,0,0.2);<br>}</div></div></div>"
          }
        },
        {
          "title": "Spécificités pour différents types d'éléments",
          "text": "La pseudo-classe :active peut être utilisée sur différents types d'éléments HTML, pas seulement les liens. Chaque type d'élément peut bénéficier d'un retour visuel spécifique.",
          "code": "/* Ciblage spécifique */\na:active { color: red; }\nbutton:active { background-color: #ddd; }\np:active { background-color: #eee; }",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f8f9fa; border-radius: 8px; font-family: system-ui, sans-serif; color: #333; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'><div style='display: flex; justify-content: center; gap: 15px; margin-bottom: 20px;'><div style='text-align: center;'><a href='#' style='display: inline-block; padding: 8px 12px; color: red; text-decoration: none; border: 1px solid #ddd; border-radius: 4px; background-color: #f8f9fa; min-width: 80px;'>Lien</a><div style='font-size: 12px; margin-top: 5px; color: #666;'>a:active</div></div><div style='text-align: center;'><button style='padding: 8px 12px; background-color: #ddd; border: none; border-radius: 4px; font-size: 14px; min-width: 80px;'>Bouton</button><div style='font-size: 12px; margin-top: 5px; color: #666;'>button:active</div></div><div style='text-align: center;'><div style='padding: 8px 12px; background-color: #eee; border-radius: 4px; font-size: 14px; min-width: 80px;'>Paragraphe</div><div style='font-size: 12px; margin-top: 5px; color: #666;'>p:active</div></div></div><div style='width: 280px; margin: 0 auto; padding: 12px; background-color: rgba(0,0,0,0.05); border-radius: 6px;'><div style='font-family: monospace; font-size: 13px; color: #333;'>/* États actifs par élément */<br>a:active { color: red; }<br>button:active { background: #ddd; }<br>p:active { background: #eee; }</div></div></div>"
          }
        },
        {
          "title": "Interaction avec les autres pseudo-classes",
          "text": "Lorsqu'on combine :active avec d'autres pseudo-classes comme :hover, on peut créer des effets d'interaction plus riches et plus sophistiqués. L'ordre de ces déclarations est crucial pour obtenir l'effet désiré.",
          "code": "button {\n  background-color: #4CAF50;\n  color: white;\n  transition: all 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #66bb6a;\n}\n\nbutton:active {\n  background-color: #388e3c;\n  box-shadow: inset 0 0 5px rgba(0,0,0,0.5);\n}",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f8f9fa; border-radius: 8px; font-family: system-ui, sans-serif; color: #333; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'><div style='display: flex; justify-content: center; margin-bottom: 15px;'><div style='display: flex; gap: 15px;'><button style='background-color: #4CAF50; color: white; padding: 8px 12px; border: none; border-radius: 4px; font-size: 14px; width: 90px;'>Normal</button><button style='background-color: #66bb6a; color: white; padding: 8px 12px; border: none; border-radius: 4px; font-size: 14px; width: 90px;'>:hover</button><button style='background-color: #388e3c; color: white; padding: 8px 12px; border: none; border-radius: 4px; font-size: 14px; box-shadow: inset 0 0 5px rgba(0,0,0,0.5); width: 90px;'>:active</button></div></div><div style='display: flex; justify-content: center; margin-bottom: 15px;'><svg viewBox='0 0 300 40' width='280' height='40'><line x1='50' y1='20' x2='150' y2='20' stroke='#ccc' stroke-width='2'/><line x1='150' y1='20' x2='250' y2='20' stroke='#ccc' stroke-width='2'/><circle cx='50' cy='20' r='6' fill='#4CAF50'/><circle cx='150' cy='20' r='6' fill='#66bb6a'/><circle cx='250' cy='20' r='6' fill='#388e3c'/><text x='100' y='35' font-family='Arial' font-size='11' fill='#555' text-anchor='middle'>Survol</text><text x='200' y='35' font-family='Arial' font-size='11' fill='#555' text-anchor='middle'>Clic</text></svg></div><div style='width: 280px; margin: 0 auto; padding: 12px; background-color: rgba(0,0,0,0.05); border-radius: 6px;'><div style='font-family: monospace; font-size: 13px; color: #333;'>button:hover {<br>&nbsp;&nbsp;background-color: #66bb6a;<br>}<br><br>button:active {<br>&nbsp;&nbsp;background-color: #388e3c;<br>&nbsp;&nbsp;box-shadow: inset 0 0 5px rgba(0,0,0,0.5);<br>}</div></div></div>"
          }
        },
        {
          "title": "Considérations pour les appareils mobiles et tactiles",
          "text": "Sur les appareils tactiles, l'effet :active est généralement de courte durée et peut être difficile à percevoir. Pour une meilleure expérience utilisateur, il est recommandé de combiner :active avec d'autres effets visuels et de s'assurer que les zones cliquables sont suffisamment grandes.",
          "code": "/* Optimisation pour mobiles */\n.bouton-tactile {\n  padding: 12px 20px; /* Zone tactile plus grande */\n  -webkit-tap-highlight-color: rgba(0,0,0,0); /* Supprime la surbrillance par défaut */\n}\n\n.bouton-tactile:active {\n  background-color: #007bff;\n  color: white;\n  transform: scale(0.98); /* Effet subtil mais perceptible */\n}",
          "visualDemo": {
            "content": "<div style='padding: 20px; background-color: #f8f9fa; border-radius: 8px; font-family: system-ui, sans-serif; color: #333; box-shadow: 0 2px 4px rgba(0,0,0,0.1);'><div style='display: flex; justify-content: center; margin-bottom: 15px;'><div style='text-align: center;'><div style='display: flex; gap: 20px; justify-content: center; margin-bottom: 15px;'><button style='padding: 12px 20px; background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 8px; font-size: 14px; color: #333; min-width: 120px;'>Normal</button><button style='padding: 12px 20px; background-color: #007bff; border: 1px solid #007bff; border-radius: 8px; font-size: 14px; color: white; min-width: 120px; transform: scale(0.98); box-shadow: inset 0 1px 3px rgba(0,0,0,0.2);'>:active</button></div><div style='margin-top: 5px; text-align: center; padding: 8px 12px; background-color: rgba(0,0,0,0.05); border-radius: 4px; display: inline-block;'><span style='font-size: 13px; color: #666;'>Zone tactile élargie + effet <code>scale(0.98)</code></span></div></div></div><div style='width: 280px; margin: 0 auto; padding: 12px; background-color: rgba(0,0,0,0.05); border-radius: 6px; margin-top: 15px;'><div style='font-family: monospace; font-size: 13px; color: #333; line-height: 1.4;'>.bouton-tactile {<br>&nbsp;&nbsp;padding: 12px 20px; <span style='color: #097969;'>/* Zone élargie */</span><br>&nbsp;&nbsp;-webkit-tap-highlight-color: transparent;<br>}<br><br>.bouton-tactile:active {<br>&nbsp;&nbsp;background-color: #007bff;<br>&nbsp;&nbsp;transform: scale(0.98);<br>&nbsp;&nbsp;box-shadow: inset 0 1px 3px rgba(0,0,0,0.2);<br>}</div></div></div>"
          }
        }
      ]
    },
    "related": [":hover", ":focus", ":link", ":visited", "pseudo-classes"],
    "exercises": [
      {
        "type": "qcm",
        "question": "Dans quel ordre les pseudo-classes de lien doivent-elles être déclarées pour fonctionner correctement ?",
        "options": [
          ":link, :visited, :hover, :active",
          ":active, :hover, :visited, :link",
          ":hover, :active, :link, :visited",
          ":link, :active, :hover, :visited"
        ],
        "correctAnswer": 0,
        "explanation": "L'ordre correct est :link, :visited, :hover, :active (mémo \"LoVe HAte\"). Cet ordre est important car les règles CSS qui ont la même spécificité sont appliquées dans l'ordre où elles apparaissent dans la feuille de style. Les états plus spécifiques comme :active doivent venir après les états plus généraux."
      },
      {
        "type": "vrai_faux",
        "question": "La pseudo-classe :active ne peut être appliquée qu'aux liens (<a>).",
        "correctAnswer": false,
        "explanation": "Faux. Bien que couramment utilisée avec les liens, la pseudo-classe :active peut être appliquée à n'importe quel élément HTML, y compris les boutons, les éléments de formulaire et même les paragraphes. Elle représente le moment où un élément est activé par l'utilisateur."
      },
      {
        "type": "completion",
        "question": "Complétez ce code CSS pour donner un effet d'enfoncement à un bouton quand il est cliqué :",
        "codeTemplate": "button:active {\n  [?]: translateY(2px);\n  box-shadow: 0 1px 2px rgba(0,0,0,0.2);\n}",
        "correctAnswer": "transform",
        "explanation": "La propriété transform avec la fonction translateY() permet de déplacer l'élément sur l'axe vertical. Combinée avec une ombre légère, cela crée un effet d'enfoncement réaliste quand le bouton est cliqué."
      },
      {
        "type": "debugging",
        "question": "Trouvez et corrigez l'erreur dans ce code CSS pour les états d'un lien :",
        "buggyCode": "a:link { color: blue; }\na:hover { background-color: yellow; }\na:active { color: red; }\na:visited { color: purple; }",
        "correctAnswer": "a:link { color: blue; }\na:visited { color: purple; }\na:hover { background-color: yellow; }\na:active { color: red; }",
        "explanation": "L'ordre des pseudo-classes est incorrect. L'ordre correct doit être :link, :visited, :hover, :active pour que chaque état remplace correctement le précédent lors des interactions. Sinon, l'état :visited pourrait écraser l'état :hover ou :active."
      },
      {
        "type": "qcm",
        "question": "Quelle est la spécification de CSS concernant la pseudo-classe :active sur les systèmes avec plusieurs boutons de souris ?",
        "options": [
          "Elle s'applique à n'importe quel bouton de la souris",
          "Elle ne s'applique qu'au bouton principal (généralement gauche)",
          "Elle s'applique uniquement au bouton droit de la souris",
          "Elle ne s'applique qu'aux clics du milieu"
        ],
        "correctAnswer": 1,
        "explanation": "Selon CSS 3, la pseudo-classe :active ne doit s'appliquer qu'au bouton principal de la souris, qui est généralement le bouton gauche pour les droitiers. Cela assure un comportement cohérent entre les différents navigateurs et systèmes."
      }
    ]
  }
}